package jurassicjigsaw_test

import (
	. "github.com/pjaneiro/advent-of-code-2020/jurassicjigsaw"
	"testing"
)

func TestChallenge1(t *testing.T) {
	var testCases = []struct {
		name     string
		input    []Tile
		expected int64
		error    bool
	}{
		{
			name:     "Example 1",
			input:    []Tile{Tile{ID: 2311, Matrix: [][]string{{".", ".", "#", "#", ".", "#", ".", ".", "#", "."}, {"#", "#", ".", ".", "#", ".", ".", ".", ".", "."}, {"#", ".", ".", ".", "#", "#", ".", ".", "#", "."}, {"#", "#", "#", "#", ".", "#", ".", ".", ".", "#"}, {"#", "#", ".", "#", "#", ".", "#", "#", "#", "."}, {"#", "#", ".", ".", ".", "#", ".", "#", "#", "#"}, {".", "#", ".", "#", ".", "#", ".", ".", "#", "#"}, {".", ".", "#", ".", ".", ".", ".", "#", ".", "."}, {"#", "#", "#", ".", ".", ".", "#", ".", "#", "."}, {".", ".", "#", "#", "#", ".", ".", "#", "#", "#"}}}, Tile{ID: 1951, Matrix: [][]string{{"#", ".", "#", "#", ".", ".", ".", "#", "#", "."}, {"#", ".", "#", "#", "#", "#", ".", ".", ".", "#"}, {".", ".", ".", ".", ".", "#", ".", ".", "#", "#"}, {"#", ".", ".", ".", "#", "#", "#", "#", "#", "#"}, {".", "#", "#", ".", "#", ".", ".", ".", ".", "#"}, {".", "#", "#", "#", ".", "#", "#", "#", "#", "#"}, {"#", "#", "#", ".", "#", "#", ".", "#", "#", "."}, {".", "#", "#", "#", ".", ".", ".", ".", "#", "."}, {".", ".", "#", ".", "#", ".", ".", "#", ".", "#"}, {"#", ".", ".", ".", "#", "#", ".", "#", ".", "."}}}, Tile{ID: 1171, Matrix: [][]string{{"#", "#", "#", "#", ".", ".", ".", "#", "#", "."}, {"#", ".", ".", "#", "#", ".", "#", ".", ".", "#"}, {"#", "#", ".", "#", ".", ".", "#", ".", "#", "."}, {".", "#", "#", "#", ".", "#", "#", "#", "#", "."}, {".", ".", "#", "#", "#", ".", "#", "#", "#", "#"}, {".", "#", "#", ".", ".", ".", ".", "#", "#", "."}, {".", "#", ".", ".", ".", "#", "#", "#", "#", "."}, {"#", ".", "#", "#", ".", "#", "#", "#", "#", "."}, {"#", "#", "#", "#", ".", ".", "#", ".", ".", "."}, {".", ".", ".", ".", ".", "#", "#", ".", ".", "."}}}, Tile{ID: 1427, Matrix: [][]string{{"#", "#", "#", ".", "#", "#", ".", "#", ".", "."}, {".", "#", ".", ".", "#", ".", "#", "#", ".", "."}, {".", "#", ".", "#", "#", ".", "#", ".", ".", "#"}, {"#", ".", "#", ".", "#", ".", "#", "#", ".", "#"}, {".", ".", ".", ".", "#", ".", ".", ".", "#", "#"}, {".", ".", ".", "#", "#", ".", ".", "#", "#", "."}, {".", ".", ".", "#", ".", "#", "#", "#", "#", "#"}, {".", "#", ".", "#", "#", "#", "#", ".", "#", "."}, {".", ".", "#", ".", ".", "#", "#", "#", ".", "#"}, {".", ".", "#", "#", ".", "#", ".", ".", "#", "."}}}, Tile{ID: 1489, Matrix: [][]string{{"#", "#", ".", "#", ".", "#", ".", ".", ".", "."}, {".", ".", "#", "#", ".", ".", ".", "#", ".", "."}, {".", "#", "#", ".", ".", "#", "#", ".", ".", "."}, {".", ".", "#", ".", ".", ".", "#", ".", ".", "."}, {"#", "#", "#", "#", "#", ".", ".", ".", "#", "."}, {"#", ".", ".", "#", ".", "#", ".", "#", ".", "#"}, {".", ".", ".", "#", ".", "#", ".", "#", ".", "."}, {"#", "#", ".", "#", ".", ".", ".", "#", "#", "."}, {".", ".", "#", "#", ".", "#", "#", ".", "#", "#"}, {"#", "#", "#", ".", "#", "#", ".", "#", ".", "."}}}, Tile{ID: 2473, Matrix: [][]string{{"#", ".", ".", ".", ".", "#", "#", "#", "#", "."}, {"#", ".", ".", "#", ".", "#", "#", ".", ".", "."}, {"#", ".", "#", "#", ".", ".", "#", ".", ".", "."}, {"#", "#", "#", "#", "#", "#", ".", "#", ".", "#"}, {".", "#", ".", ".", ".", "#", ".", "#", ".", "#"}, {".", "#", "#", "#", "#", "#", "#", "#", "#", "#"}, {".", "#", "#", "#", ".", "#", ".", ".", "#", "."}, {"#", "#", "#", "#", "#", "#", "#", "#", ".", "#"}, {"#", "#", ".", ".", ".", "#", "#", ".", "#", "."}, {".", ".", "#", "#", "#", ".", "#", ".", "#", "."}}}, Tile{ID: 2971, Matrix: [][]string{{".", ".", "#", ".", "#", ".", ".", ".", ".", "#"}, {"#", ".", ".", ".", "#", "#", "#", ".", ".", "."}, {"#", ".", "#", ".", "#", "#", "#", ".", ".", "."}, {"#", "#", ".", "#", "#", ".", ".", "#", ".", "."}, {".", "#", "#", "#", "#", "#", ".", ".", "#", "#"}, {".", "#", ".", ".", "#", "#", "#", "#", ".", "#"}, {"#", ".", ".", "#", ".", "#", ".", ".", "#", "."}, {".", ".", "#", "#", "#", "#", ".", "#", "#", "#"}, {".", ".", "#", ".", "#", ".", "#", "#", "#", "."}, {".", ".", ".", "#", ".", "#", ".", "#", ".", "#"}}}, Tile{ID: 2729, Matrix: [][]string{{".", ".", ".", "#", ".", "#", ".", "#", ".", "#"}, {"#", "#", "#", "#", ".", "#", ".", ".", ".", "."}, {".", ".", "#", ".", "#", ".", ".", ".", ".", "."}, {".", ".", ".", ".", "#", ".", ".", "#", ".", "#"}, {".", "#", "#", ".", ".", "#", "#", ".", "#", "."}, {".", "#", ".", "#", "#", "#", "#", ".", ".", "."}, {"#", "#", "#", "#", ".", "#", ".", "#", ".", "."}, {"#", "#", ".", "#", "#", "#", "#", ".", ".", "."}, {"#", "#", ".", ".", "#", ".", "#", "#", ".", "."}, {"#", ".", "#", "#", ".", ".", ".", "#", "#", "."}}}, Tile{ID: 3079, Matrix: [][]string{{"#", ".", "#", ".", "#", "#", "#", "#", "#", "."}, {".", "#", ".", ".", "#", "#", "#", "#", "#", "#"}, {".", ".", "#", ".", ".", ".", ".", ".", ".", "."}, {"#", "#", "#", "#", "#", "#", ".", ".", ".", "."}, {"#", "#", "#", "#", ".", "#", ".", ".", "#", "."}, {".", "#", ".", ".", ".", "#", ".", "#", "#", "."}, {"#", ".", "#", "#", "#", "#", "#", ".", "#", "#"}, {".", ".", "#", ".", "#", "#", "#", ".", ".", "."}, {".", ".", "#", ".", ".", ".", ".", ".", ".", "."}, {".", ".", "#", ".", "#", "#", "#", ".", ".", "."}}}},
			expected: 20899048083289,
			error:    false,
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			actual, err := Challenge1(tc.input)
			if err != nil && tc.error == false {
				t.Errorf("Challenge1(%v) threw '%v', want %d", tc.input, err, tc.expected)
			} else if err == nil && tc.error == true {
				t.Errorf("Challenge1(%v) = %d, want to throw", tc.input, actual)
			} else if actual != tc.expected {
				t.Errorf("Challenge1(%v) = %d, want %d", tc.input, actual, tc.expected)
			}
		})
	}
}

func TestChallenge2(t *testing.T) {
	var testCases = []struct {
		name     string
		input    []Tile
		expected int64
		error    bool
	}{
		{
			name:     "Example 1",
			input:    []Tile{Tile{ID: 2311, Matrix: [][]string{{".", ".", "#", "#", ".", "#", ".", ".", "#", "."}, {"#", "#", ".", ".", "#", ".", ".", ".", ".", "."}, {"#", ".", ".", ".", "#", "#", ".", ".", "#", "."}, {"#", "#", "#", "#", ".", "#", ".", ".", ".", "#"}, {"#", "#", ".", "#", "#", ".", "#", "#", "#", "."}, {"#", "#", ".", ".", ".", "#", ".", "#", "#", "#"}, {".", "#", ".", "#", ".", "#", ".", ".", "#", "#"}, {".", ".", "#", ".", ".", ".", ".", "#", ".", "."}, {"#", "#", "#", ".", ".", ".", "#", ".", "#", "."}, {".", ".", "#", "#", "#", ".", ".", "#", "#", "#"}}}, Tile{ID: 1951, Matrix: [][]string{{"#", ".", "#", "#", ".", ".", ".", "#", "#", "."}, {"#", ".", "#", "#", "#", "#", ".", ".", ".", "#"}, {".", ".", ".", ".", ".", "#", ".", ".", "#", "#"}, {"#", ".", ".", ".", "#", "#", "#", "#", "#", "#"}, {".", "#", "#", ".", "#", ".", ".", ".", ".", "#"}, {".", "#", "#", "#", ".", "#", "#", "#", "#", "#"}, {"#", "#", "#", ".", "#", "#", ".", "#", "#", "."}, {".", "#", "#", "#", ".", ".", ".", ".", "#", "."}, {".", ".", "#", ".", "#", ".", ".", "#", ".", "#"}, {"#", ".", ".", ".", "#", "#", ".", "#", ".", "."}}}, Tile{ID: 1171, Matrix: [][]string{{"#", "#", "#", "#", ".", ".", ".", "#", "#", "."}, {"#", ".", ".", "#", "#", ".", "#", ".", ".", "#"}, {"#", "#", ".", "#", ".", ".", "#", ".", "#", "."}, {".", "#", "#", "#", ".", "#", "#", "#", "#", "."}, {".", ".", "#", "#", "#", ".", "#", "#", "#", "#"}, {".", "#", "#", ".", ".", ".", ".", "#", "#", "."}, {".", "#", ".", ".", ".", "#", "#", "#", "#", "."}, {"#", ".", "#", "#", ".", "#", "#", "#", "#", "."}, {"#", "#", "#", "#", ".", ".", "#", ".", ".", "."}, {".", ".", ".", ".", ".", "#", "#", ".", ".", "."}}}, Tile{ID: 1427, Matrix: [][]string{{"#", "#", "#", ".", "#", "#", ".", "#", ".", "."}, {".", "#", ".", ".", "#", ".", "#", "#", ".", "."}, {".", "#", ".", "#", "#", ".", "#", ".", ".", "#"}, {"#", ".", "#", ".", "#", ".", "#", "#", ".", "#"}, {".", ".", ".", ".", "#", ".", ".", ".", "#", "#"}, {".", ".", ".", "#", "#", ".", ".", "#", "#", "."}, {".", ".", ".", "#", ".", "#", "#", "#", "#", "#"}, {".", "#", ".", "#", "#", "#", "#", ".", "#", "."}, {".", ".", "#", ".", ".", "#", "#", "#", ".", "#"}, {".", ".", "#", "#", ".", "#", ".", ".", "#", "."}}}, Tile{ID: 1489, Matrix: [][]string{{"#", "#", ".", "#", ".", "#", ".", ".", ".", "."}, {".", ".", "#", "#", ".", ".", ".", "#", ".", "."}, {".", "#", "#", ".", ".", "#", "#", ".", ".", "."}, {".", ".", "#", ".", ".", ".", "#", ".", ".", "."}, {"#", "#", "#", "#", "#", ".", ".", ".", "#", "."}, {"#", ".", ".", "#", ".", "#", ".", "#", ".", "#"}, {".", ".", ".", "#", ".", "#", ".", "#", ".", "."}, {"#", "#", ".", "#", ".", ".", ".", "#", "#", "."}, {".", ".", "#", "#", ".", "#", "#", ".", "#", "#"}, {"#", "#", "#", ".", "#", "#", ".", "#", ".", "."}}}, Tile{ID: 2473, Matrix: [][]string{{"#", ".", ".", ".", ".", "#", "#", "#", "#", "."}, {"#", ".", ".", "#", ".", "#", "#", ".", ".", "."}, {"#", ".", "#", "#", ".", ".", "#", ".", ".", "."}, {"#", "#", "#", "#", "#", "#", ".", "#", ".", "#"}, {".", "#", ".", ".", ".", "#", ".", "#", ".", "#"}, {".", "#", "#", "#", "#", "#", "#", "#", "#", "#"}, {".", "#", "#", "#", ".", "#", ".", ".", "#", "."}, {"#", "#", "#", "#", "#", "#", "#", "#", ".", "#"}, {"#", "#", ".", ".", ".", "#", "#", ".", "#", "."}, {".", ".", "#", "#", "#", ".", "#", ".", "#", "."}}}, Tile{ID: 2971, Matrix: [][]string{{".", ".", "#", ".", "#", ".", ".", ".", ".", "#"}, {"#", ".", ".", ".", "#", "#", "#", ".", ".", "."}, {"#", ".", "#", ".", "#", "#", "#", ".", ".", "."}, {"#", "#", ".", "#", "#", ".", ".", "#", ".", "."}, {".", "#", "#", "#", "#", "#", ".", ".", "#", "#"}, {".", "#", ".", ".", "#", "#", "#", "#", ".", "#"}, {"#", ".", ".", "#", ".", "#", ".", ".", "#", "."}, {".", ".", "#", "#", "#", "#", ".", "#", "#", "#"}, {".", ".", "#", ".", "#", ".", "#", "#", "#", "."}, {".", ".", ".", "#", ".", "#", ".", "#", ".", "#"}}}, Tile{ID: 2729, Matrix: [][]string{{".", ".", ".", "#", ".", "#", ".", "#", ".", "#"}, {"#", "#", "#", "#", ".", "#", ".", ".", ".", "."}, {".", ".", "#", ".", "#", ".", ".", ".", ".", "."}, {".", ".", ".", ".", "#", ".", ".", "#", ".", "#"}, {".", "#", "#", ".", ".", "#", "#", ".", "#", "."}, {".", "#", ".", "#", "#", "#", "#", ".", ".", "."}, {"#", "#", "#", "#", ".", "#", ".", "#", ".", "."}, {"#", "#", ".", "#", "#", "#", "#", ".", ".", "."}, {"#", "#", ".", ".", "#", ".", "#", "#", ".", "."}, {"#", ".", "#", "#", ".", ".", ".", "#", "#", "."}}}, Tile{ID: 3079, Matrix: [][]string{{"#", ".", "#", ".", "#", "#", "#", "#", "#", "."}, {".", "#", ".", ".", "#", "#", "#", "#", "#", "#"}, {".", ".", "#", ".", ".", ".", ".", ".", ".", "."}, {"#", "#", "#", "#", "#", "#", ".", ".", ".", "."}, {"#", "#", "#", "#", ".", "#", ".", ".", "#", "."}, {".", "#", ".", ".", ".", "#", ".", "#", "#", "."}, {"#", ".", "#", "#", "#", "#", "#", ".", "#", "#"}, {".", ".", "#", ".", "#", "#", "#", ".", ".", "."}, {".", ".", "#", ".", ".", ".", ".", ".", ".", "."}, {".", ".", "#", ".", "#", "#", "#", ".", ".", "."}}}},
			expected: 273,
			error:    false,
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			actual, err := Challenge2(tc.input)
			if err != nil && tc.error == false {
				t.Errorf("Challenge2(%v) threw '%v', want %d", tc.input, err, tc.expected)
			} else if err == nil && tc.error == true {
				t.Errorf("Challenge2(%v) = %d, want to throw", tc.input, actual)
			} else if actual != tc.expected {
				t.Errorf("Challenge2(%v) = %d, want %d", tc.input, actual, tc.expected)
			}
		})
	}
}
